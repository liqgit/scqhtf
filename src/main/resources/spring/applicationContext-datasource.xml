<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="
          http://www.springframework.org/schema/beans
          http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
          http://www.springframework.org/schema/tx
          http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
          http://www.springframework.org/schema/aop
          http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">


    <!-- ****************************** 数据库定义 ****************************** -->
    <bean id="mainDataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
          destroy-method="close">
        <!-- <property name="driverClassName" value="#{config['jdbc.driverClass']}" /> -->
        <property name="driverClass" value="com.mysql.jdbc.Driver"/>

        <property name="jdbcUrl" value="#{config['jdbc.url']}"/>
        <property name="user" value="#{config['jdbc.username']}"/>
        <property name="password" value="#{config['jdbc.password']}"/>
        <!--连接池中保留的最大连接数。默认值: 15 -->
        <property name="maxPoolSize" value="20"/>
        <!-- 连接池中保留的最小连接数，默认为：3-->
        <property name="minPoolSize" value="2"/>
        <!-- 初始化连接池中的连接数，取值应在minPoolSize与maxPoolSize之间，默认为3-->
        <property name="initialPoolSize" value="2"/>

        <!--最大空闲时间，60秒内未使用则连接被丢弃。若为0则永不丢弃。默认值: 0 -->
        <property name="maxIdleTime" value="60"></property>

        <!-- 当连接池连接耗尽时，客户端调用getConnection()后等待获取新连接的时间，超时后将抛出SQLException，如设为0则无限期等待。单位毫秒。默认: 0 -->
        <property name="checkoutTimeout" value="3000"/>

        <!--当连接池中的连接耗尽的时候c3p0一次同时获取的连接数。默认值: 3 -->
        <property name="acquireIncrement" value="2"/>

        <!--定义在从数据库获取新连接失败后重复尝试的次数。默认值: 30 ；小于等于0表示无限次-->
        <property name="acquireRetryAttempts" value="0"/>

        <!--重新尝试的时间间隔，默认为：1000毫秒-->
        <property name="acquireRetryDelay" value="1000"/>

        <!--关闭连接时，是否提交未提交的事务，默认为false，即关闭连接，回滚未提交的事务 -->
        <property name="autoCommitOnClose" value="false"></property>

        <!--如果为false，则获取连接失败将会引起所有等待连接池来获取连接的线程抛出异常，但是数据源仍有效保留，并在下次调用getConnection()的时候继续尝试获取连接。如果设为true，那么在尝试获取连接失败后该数据源将申明已断开并永久关闭。默认: false-->
        <property name="breakAfterAcquireFailure" value="false"></property>

        <!--每60秒检查所有连接池中的空闲连接。默认值: 0，不检查 -->
        <property name="idleConnectionTestPeriod" value="60"></property>
        <!--c3p0全局的PreparedStatements缓存的大小。如果maxStatements与maxStatementsPerConnection均为0，则缓存不生效，只要有一个不为0，则语句的缓存就能生效。如果默认值: 0-->
        <property name="maxStatements" value="100"></property>
        <!--maxStatementsPerConnection定义了连接池内单个连接所拥有的最大缓存statements数。默认值: 0 -->
        <property name="maxStatementsPerConnection" value="15"></property>
    </bean>


    <!-- ****************************** 事务AOP定义 ****************************** -->
    <bean id="sessionFactory" class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">

        <property name="dataSource" ref="mainDataSource"></property>

        <property name="hibernateProperties">
            <props>
                <!-- 设置Hibernate方言 -->
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
                <!-- 是否打印sql -->
                <prop key="hibernate.show_sql">false</prop>
                <!-- 格式化sql -->
                <prop key="hibernate.format_sql">false</prop>
                <!-- 是否自动更新表 -->
                <prop key="hibernate.hbm2ddl.auto">update</prop>
                <prop key="hibernate.current_session_context_class">thread</prop>
                <!-- 最大抓取深度，如果为0，则关闭默认的外连接抓取。建议值为0-3 -->
                <prop key="hibernate.max_fetch_depth">1</prop>
                <!-- 用于生成有助于调试的注释信息，默认为关闭 -->
                <prop key="hibernate.use_sql_comments">false</prop>
                <prop key="hibernate.jdbc.batch_size">50</prop>
                <prop key="hibernate.connection.url">jdbc:mysql://localhost:3307</prop>
                <prop key="hibernate.connection.driver_class">com.mysql.jdbc.Driver</prop>
            </props>
        </property>

        <property name="mappingDirectoryLocations">
            <list>
                <value>classpath:cn/com/eship/model</value>
            </list>
        </property>
    </bean>


    <bean id="hibernateTemplate" class="org.springframework.orm.hibernate3.HibernateTemplate">
        <property name="sessionFactory">
            <ref bean="sessionFactory"/>
        </property>
    </bean>

    <bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
        <property name="sessionFactory">
            <ref bean="sessionFactory"/>
        </property>
    </bean>

    <!-- 配置事务的传播特性 -->
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="add*" propagation="REQUIRED"/>
            <tx:method name="save*" propagation="REQUIRED"/>
            <tx:method name="del*" propagation="REQUIRED"/>
            <tx:method name="modify*" propagation="REQUIRED"/>
            <tx:method name="update*" propagation="REQUIRED"/>
            <tx:method name="batch*" propagation="REQUIRED"/>
            <tx:method name="edit*" propagation="REQUIRED"/>
            <tx:method name="find*" propagation="REQUIRED" read-only="true"/>
            <tx:method name="make*" propagation="REQUIRED" read-only="true"/>
        </tx:attributes>
    </tx:advice>


    <aop:config>
        <aop:pointcut id="allServiceMethods"
                      expression="execution(* cn.com.eship.service.*.*(..))"/>
        <aop:advisor advice-ref="txAdvice"
                     pointcut-ref="allServiceMethods"/>
    </aop:config>

    <!--
         启动事务的注解解析器
      -->
    <tx:annotation-driven transaction-manager="transactionManager"/>
</beans>